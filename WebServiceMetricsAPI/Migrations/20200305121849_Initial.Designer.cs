// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebServiceMetricsAPI.DataAccess;

namespace WebServiceMetricsAPI.Migrations
{
    [DbContext(typeof(MetricsContext))]
    [Migration("20200305121849_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WebServiceMetricsAPI.Entities.MetricsResult", b =>
                {
                    b.Property<int>("MetricsResultId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("MetricsRunId");

                    b.Property<string>("Result");

                    b.Property<int>("TimeElapsedInMilliseconds");

                    b.HasKey("MetricsResultId");

                    b.HasIndex("MetricsRunId");

                    b.ToTable("MetricsResults");
                });

            modelBuilder.Entity("WebServiceMetricsAPI.Entities.MetricsRun", b =>
                {
                    b.Property<int>("MetricRunId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("NumberOfRequestsToSend");

                    b.Property<string>("RequestBody");

                    b.Property<string>("RequestUrl");

                    b.HasKey("MetricRunId");

                    b.ToTable("MetricsRuns");
                });

            modelBuilder.Entity("WebServiceMetricsAPI.Entities.MetricsResult", b =>
                {
                    b.HasOne("WebServiceMetricsAPI.Entities.MetricsRun", "MetricRun")
                        .WithMany("MetricResults")
                        .HasForeignKey("MetricsRunId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
